/*
 * Generated by Abacus.
 */
package com.landawn.abacus.entity.stringId;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

/**
 * Generated by Abacus.
 * @version ${version}
 */
public interface StringIdPNL {
    public static final String _DN = "StringId".intern();

    public static interface AuthorPNL {
        /**
         * Name of "Author" entity. 
         */
        public static final String __ = "Author".intern();

        /**
         * Name of "id" property. 
         * type: long. 
         * column: "id". 
         */
        public static final String ID = (__ + ".id").intern();

        /**
         * Name of "firstName" property. 
         * type: String. 
         * column: "firstName". 
         */
        public static final String FIRST_NAME = (__ + ".firstName").intern();

        /**
         * Name of "lastName" property. 
         * type: String. 
         * column: "lastName". 
         */
        public static final String LAST_NAME = (__ + ".lastName").intern();

        /**
         * Name of "birthDay" property. 
         * type: Timestamp. 
         * column: "birthday". 
         */
        public static final String BIRTH_DAY = (__ + ".birthDay").intern();

        /**
         * Name of "contact" property. 
         * type: com.landawn.abacus.entity.stringId.Contact. 
         * column: "Contact". 
         */
        public static final String CONTACT = (__ + ".contact").intern();

        /**
         * Name of "book" property. 
         * type: List<com.landawn.abacus.entity.stringId.Book>. 
         * column: "Book". 
         */
        public static final String BOOK = (__ + ".book").intern();

        /**
         * Immutable property name list
         */
        public static final List<String> _PNL = Collections.unmodifiableList(Arrays.asList(ID, FIRST_NAME, LAST_NAME, BIRTH_DAY, CONTACT, BOOK));

        /**
         * Immutable column name list
         */
        public static final List<String> _CNL = Collections.unmodifiableList(Arrays.asList("AutoIncrement.id".intern(), "AutoIncrement.firstName".intern(), "AutoIncrement.lastName".intern(), "AutoIncrement.birthday".intern()));
    }

    public static interface AuthorBookPNL {
        /**
         * Name of "AuthorBook" entity. 
         */
        public static final String __ = "AuthorBook".intern();

        /**
         * Name of "authorId" property. 
         * type: long. 
         * column: "authorid". 
         */
        public static final String AUTHOR_ID = (__ + ".authorId").intern();

        /**
         * Name of "bookId" property. 
         * type: long. 
         * column: "bookid". 
         */
        public static final String BOOK_ID = (__ + ".bookId").intern();

        /**
         * Immutable property name list
         */
        public static final List<String> _PNL = Collections.unmodifiableList(Arrays.asList(AUTHOR_ID, BOOK_ID));

        /**
         * Immutable column name list
         */
        public static final List<String> _CNL = Collections.unmodifiableList(Arrays.asList("authorbook.authorid".intern(), "authorbook.bookid".intern()));
    }

    public static interface BookPNL {
        /**
         * Name of "Book" entity. 
         */
        public static final String __ = "Book".intern();

        /**
         * Name of "id" property. 
         * type: long. 
         * column: "id". 
         */
        public static final String ID = (__ + ".id").intern();

        /**
         * Name of "name" property. 
         * type: String. 
         * column: "name". 
         */
        public static final String NAME = (__ + ".name").intern();

        /**
         * Name of "language" property. 
         * type: String. 
         * column: "language". 
         */
        public static final String LANGUAGE = (__ + ".language").intern();

        /**
         * Name of "author" property. 
         * type: List<com.landawn.abacus.entity.stringId.Author>. 
         * column: "Author". 
         */
        public static final String AUTHOR = (__ + ".author").intern();

        /**
         * Immutable property name list
         */
        public static final List<String> _PNL = Collections.unmodifiableList(Arrays.asList(ID, NAME, LANGUAGE, AUTHOR));

        /**
         * Immutable column name list
         */
        public static final List<String> _CNL = Collections.unmodifiableList(Arrays.asList("book.id".intern(), "book.name".intern(), "book.language".intern()));
    }

    public static interface ContactPNL {
        /**
         * Name of "Contact" entity. 
         */
        public static final String __ = "Contact".intern();

        /**
         * Name of "id" property. 
         * type: long. 
         * column: "id". 
         */
        public static final String ID = (__ + ".id").intern();

        /**
         * Name of "hostId" property. 
         * type: long. 
         * column: "hostid". 
         */
        public static final String HOST_ID = (__ + ".hostId").intern();

        /**
         * Name of "mobile" property. 
         * type: String. 
         * column: "mobile". 
         */
        public static final String MOBILE = (__ + ".mobile").intern();

        /**
         * Name of "telephone" property. 
         * type: String. 
         * column: "telephone". 
         */
        public static final String TELEPHONE = (__ + ".telephone").intern();

        /**
         * Name of "email" property. 
         * type: String. 
         * column: "email". 
         */
        public static final String EMAIL = (__ + ".email").intern();

        /**
         * Name of "address" property. 
         * type: String. 
         * column: "address". 
         */
        public static final String ADDRESS = (__ + ".address").intern();

        /**
         * Name of "emailList" property. 
         * type: List<com.landawn.abacus.entity.stringId.Email>. 
         * column: "Email". 
         */
        public static final String EMAIL_LIST = (__ + ".emailList").intern();

        /**
         * Immutable property name list
         */
        public static final List<String> _PNL = Collections.unmodifiableList(Arrays.asList(ID, HOST_ID, MOBILE, TELEPHONE, EMAIL, ADDRESS, EMAIL_LIST));

        /**
         * Immutable column name list
         */
        public static final List<String> _CNL = Collections.unmodifiableList(Arrays.asList("contact.id".intern(), "contact.hostid".intern(), "contact.mobile".intern(), "contact.telephone".intern(), "contact.email".intern(), "contact.address".intern()));
    }

    public static interface DataTypePNL {
        /**
         * Name of "DataType" entity. 
         */
        public static final String __ = "DataType".intern();

        /**
         * Name of "byteType" property. 
         * type: byte. 
         * column: "bytetype". 
         */
        public static final String BYTE_TYPE = (__ + ".byteType").intern();

        /**
         * Name of "charType" property. 
         * type: char. 
         * column: "chartype". 
         */
        public static final String CHAR_TYPE = (__ + ".charType").intern();

        /**
         * Name of "booleanType" property. 
         * type: boolean. 
         * column: "booleantype". 
         */
        public static final String BOOLEAN_TYPE = (__ + ".booleanType").intern();

        /**
         * Name of "shortType" property. 
         * type: short. 
         * column: "shorttype". 
         */
        public static final String SHORT_TYPE = (__ + ".shortType").intern();

        /**
         * Name of "intType" property. 
         * type: int. 
         * column: "inttype". 
         */
        public static final String INT_TYPE = (__ + ".intType").intern();

        /**
         * Name of "longType" property. 
         * type: long. 
         * column: "longtype". 
         */
        public static final String LONG_TYPE = (__ + ".longType").intern();

        /**
         * Name of "floatType" property. 
         * type: float. 
         * column: "floattype". 
         */
        public static final String FLOAT_TYPE = (__ + ".floatType").intern();

        /**
         * Name of "doubleType" property. 
         * type: double. 
         * column: "doubletype". 
         */
        public static final String DOUBLE_TYPE = (__ + ".doubleType").intern();

        /**
         * Name of "bigIntegerType" property. 
         * type: BigInteger. 
         * column: "bigIntegerType". 
         */
        public static final String BIG_INTEGER_TYPE = (__ + ".bigIntegerType").intern();

        /**
         * Name of "bigDecimalType" property. 
         * type: BigDecimal. 
         * column: "bigdecimaltype". 
         */
        public static final String BIG_DECIMAL_TYPE = (__ + ".bigDecimalType").intern();

        /**
         * Name of "stringType" property. 
         * type: String. 
         * column: "stringtype". 
         */
        public static final String STRING_TYPE = (__ + ".stringType").intern();

        /**
         * Name of "byteArrayType" property. 
         * type: byte[]. 
         * column: "bytearraytype". 
         */
        public static final String BYTE_ARRAY_TYPE = (__ + ".byteArrayType").intern();

        /**
         * Name of "characterStreamType" property. 
         * type: CharacterStream. 
         * column: "characterstreamtype". 
         */
        public static final String CHARACTER_STREAM_TYPE = (__ + ".characterStreamType").intern();

        /**
         * Name of "binaryStreamType" property. 
         * type: BinaryStream. 
         * column: "binarystreamtype". 
         */
        public static final String BINARY_STREAM_TYPE = (__ + ".binaryStreamType").intern();

        /**
         * Name of "clobType" property. 
         * type: Clob. 
         * column: "clobtype". 
         */
        public static final String CLOB_TYPE = (__ + ".clobType").intern();

        /**
         * Name of "blobType" property. 
         * type: Blob. 
         * column: "blobtype". 
         */
        public static final String BLOB_TYPE = (__ + ".blobType").intern();

        /**
         * Name of "dateType" property. 
         * type: Date. 
         * column: "datetype". 
         */
        public static final String DATE_TYPE = (__ + ".dateType").intern();

        /**
         * Name of "timeType" property. 
         * type: Time. 
         * column: "timetype". 
         */
        public static final String TIME_TYPE = (__ + ".timeType").intern();

        /**
         * Name of "timestampType" property. 
         * type: Timestamp. 
         * column: "timestamptype". 
         */
        public static final String TIMESTAMP_TYPE = (__ + ".timestampType").intern();

        /**
         * Name of "longDateType" property. 
         * type: long. 
         * column: "longDateType". 
         */
        public static final String LONG_DATE_TYPE = (__ + ".longDateType").intern();

        /**
         * Name of "longTimeType" property. 
         * type: long. 
         * column: "longTimeType". 
         */
        public static final String LONG_TIME_TYPE = (__ + ".longTimeType").intern();

        /**
         * Name of "longTimestampType" property. 
         * type: long. 
         * column: "longTimestampType". 
         */
        public static final String LONG_TIMESTAMP_TYPE = (__ + ".longTimestampType").intern();

        /**
         * Name of "enumType" property. 
         * type: String. 
         * column: "enumType". 
         */
        public static final String ENUM_TYPE = (__ + ".enumType").intern();

        /**
         * Name of "stringArrayListType" property. 
         * type: ArrayList<String>. 
         * column: "stringarraylisttype". 
         */
        public static final String STRING_ARRAY_LIST_TYPE = (__ + ".stringArrayListType").intern();

        /**
         * Name of "booleanLinkedListType" property. 
         * type: LinkedList<Boolean>. 
         * column: "booleanlinkedlisttype". 
         */
        public static final String BOOLEAN_LINKED_LIST_TYPE = (__ + ".booleanLinkedListType").intern();

        /**
         * Name of "doubleListType" property. 
         * type: List<Double>. 
         * column: "doublearraylisttype". 
         */
        public static final String DOUBLE_LIST_TYPE = (__ + ".doubleListType").intern();

        /**
         * Name of "dateArrayListType" property. 
         * type: ArrayList<Date>. 
         * column: "datearraylisttype". 
         */
        public static final String DATE_ARRAY_LIST_TYPE = (__ + ".dateArrayListType").intern();

        /**
         * Name of "timestampArrayListType" property. 
         * type: ArrayList<Timestamp>. 
         * column: "timestamparraylisttype". 
         */
        public static final String TIMESTAMP_ARRAY_LIST_TYPE = (__ + ".timestampArrayListType").intern();

        /**
         * Name of "bigDecimalArrayListType" property. 
         * type: ArrayList<BigDecimal>. 
         * column: "bigdecimalarraylisttype". 
         */
        public static final String BIG_DECIMAL_ARRAY_LIST_TYPE = (__ + ".bigDecimalArrayListType").intern();

        /**
         * Name of "stringHashSetType" property. 
         * type: HashSet<String>. 
         * column: "stringhashsettype". 
         */
        public static final String STRING_HASH_SET_TYPE = (__ + ".stringHashSetType").intern();

        /**
         * Name of "booleanLinkedHashSetType" property. 
         * type: LinkedHashSet<Boolean>. 
         * column: "booleanlinkedhashsettype". 
         */
        public static final String BOOLEAN_LINKED_HASH_SET_TYPE = (__ + ".booleanLinkedHashSetType").intern();

        /**
         * Name of "dateHashSetType" property. 
         * type: HashSet<Date>. 
         * column: "datehashsettype". 
         */
        public static final String DATE_HASH_SET_TYPE = (__ + ".dateHashSetType").intern();

        /**
         * Name of "timestampHashSetType" property. 
         * type: HashSet<Timestamp>. 
         * column: "timestamphashsettype". 
         */
        public static final String TIMESTAMP_HASH_SET_TYPE = (__ + ".timestampHashSetType").intern();

        /**
         * Name of "bigDecimalHashSetType" property. 
         * type: HashSet<BigDecimal>. 
         * column: "bigdecimalhashsettype". 
         */
        public static final String BIG_DECIMAL_HASH_SET_TYPE = (__ + ".bigDecimalHashSetType").intern();

        /**
         * Name of "stringHashMapType" property. 
         * type: HashMap<String, String>. 
         * column: "stringhashmaptype". 
         */
        public static final String STRING_HASH_MAP_TYPE = (__ + ".stringHashMapType").intern();

        /**
         * Name of "booleanLinkedHashMapType" property. 
         * type: LinkedHashMap<String, Boolean>. 
         * column: "booleanlinkedhashmaptype". 
         */
        public static final String BOOLEAN_LINKED_HASH_MAP_TYPE = (__ + ".booleanLinkedHashMapType").intern();

        /**
         * Name of "floatHashMapType" property. 
         * type: HashMap<String, Float>. 
         * column: "floathashmaptype". 
         */
        public static final String FLOAT_HASH_MAP_TYPE = (__ + ".floatHashMapType").intern();

        /**
         * Name of "dateHashMapType" property. 
         * type: HashMap<String, Date>. 
         * column: "datehashmaptype". 
         */
        public static final String DATE_HASH_MAP_TYPE = (__ + ".dateHashMapType").intern();

        /**
         * Name of "timestampHashMapType" property. 
         * type: HashMap<Timestamp, Float>. 
         * column: "timestamphashmaptype". 
         */
        public static final String TIMESTAMP_HASH_MAP_TYPE = (__ + ".timestampHashMapType").intern();

        /**
         * Name of "bigDecimalHashMapType" property. 
         * type: HashMap<BigDecimal, String>. 
         * column: "bigdecimalhashmaptype". 
         */
        public static final String BIG_DECIMAL_HASH_MAP_TYPE = (__ + ".bigDecimalHashMapType").intern();

        /**
         * Name of "stringVectorType" property. 
         * type: Vector<String>. 
         * column: "stringvectortype". 
         */
        public static final String STRING_VECTOR_TYPE = (__ + ".stringVectorType").intern();

        /**
         * Name of "stringConcurrentHashMapType" property. 
         * type: ConcurrentHashMap<BigDecimal, String>. 
         * column: "stringconcurrenthashmaptype". 
         */
        public static final String STRING_CONCURRENT_HASH_MAP_TYPE = (__ + ".stringConcurrentHashMapType").intern();

        /**
         * Name of "jsonType" property. 
         * type: String. 
         * column: "jsonType". 
         */
        public static final String JSON_TYPE = (__ + ".jsonType").intern();

        /**
         * Name of "xmlType" property. 
         * type: String. 
         * column: "xmlType". 
         */
        public static final String XML_TYPE = (__ + ".xmlType").intern();

        /**
         * Immutable property name list
         */
        public static final List<String> _PNL = Collections.unmodifiableList(Arrays.asList(BYTE_TYPE, CHAR_TYPE, BOOLEAN_TYPE, SHORT_TYPE, INT_TYPE, LONG_TYPE, FLOAT_TYPE, DOUBLE_TYPE, BIG_INTEGER_TYPE, BIG_DECIMAL_TYPE, STRING_TYPE, BYTE_ARRAY_TYPE, CHARACTER_STREAM_TYPE, BINARY_STREAM_TYPE, CLOB_TYPE, BLOB_TYPE, DATE_TYPE, TIME_TYPE, TIMESTAMP_TYPE, LONG_DATE_TYPE, LONG_TIME_TYPE, LONG_TIMESTAMP_TYPE, ENUM_TYPE, STRING_ARRAY_LIST_TYPE, BOOLEAN_LINKED_LIST_TYPE, DOUBLE_LIST_TYPE, DATE_ARRAY_LIST_TYPE, TIMESTAMP_ARRAY_LIST_TYPE, BIG_DECIMAL_ARRAY_LIST_TYPE, STRING_HASH_SET_TYPE, BOOLEAN_LINKED_HASH_SET_TYPE, DATE_HASH_SET_TYPE, TIMESTAMP_HASH_SET_TYPE, BIG_DECIMAL_HASH_SET_TYPE, STRING_HASH_MAP_TYPE, BOOLEAN_LINKED_HASH_MAP_TYPE, FLOAT_HASH_MAP_TYPE, DATE_HASH_MAP_TYPE, TIMESTAMP_HASH_MAP_TYPE, BIG_DECIMAL_HASH_MAP_TYPE, STRING_VECTOR_TYPE, STRING_CONCURRENT_HASH_MAP_TYPE, JSON_TYPE, XML_TYPE));

        /**
         * Immutable column name list
         */
        public static final List<String> _CNL = Collections.unmodifiableList(Arrays.asList("data_type.bytetype".intern(), "data_type.chartype".intern(), "data_type.booleantype".intern(), "data_type.shorttype".intern(), "data_type.inttype".intern(), "data_type.longtype".intern(), "data_type.floattype".intern(), "data_type.doubletype".intern(), "data_type.bigIntegerType".intern(), "data_type.bigdecimaltype".intern(), "data_type.stringtype".intern(), "data_type.bytearraytype".intern(), "data_type.characterstreamtype".intern(), "data_type.binarystreamtype".intern(), "data_type.clobtype".intern(), "data_type.blobtype".intern(), "data_type.datetype".intern(), "data_type.timetype".intern(), "data_type.timestamptype".intern(), "data_type.longDateType".intern(), "data_type.longTimeType".intern(), "data_type.longTimestampType".intern(), "data_type.enumType".intern(), "data_type.stringarraylisttype".intern(), "data_type.booleanlinkedlisttype".intern(), "data_type.doublearraylisttype".intern(), "data_type.datearraylisttype".intern(), "data_type.timestamparraylisttype".intern(), "data_type.bigdecimalarraylisttype".intern(), "data_type.stringhashsettype".intern(), "data_type.booleanlinkedhashsettype".intern(), "data_type.datehashsettype".intern(), "data_type.timestamphashsettype".intern(), "data_type.bigdecimalhashsettype".intern(), "data_type.stringhashmaptype".intern(), "data_type.booleanlinkedhashmaptype".intern(), "data_type.floathashmaptype".intern(), "data_type.datehashmaptype".intern(), "data_type.timestamphashmaptype".intern(), "data_type.bigdecimalhashmaptype".intern(), "data_type.stringvectortype".intern(), "data_type.stringconcurrenthashmaptype".intern(), "data_type.jsonType".intern(), "data_type.xmlType".intern()));
    }

    public static interface EmailPNL {
        /**
         * Name of "Email" entity. 
         */
        public static final String __ = "Email".intern();

        /**
         * Name of "id" property. 
         * type: long. 
         * column: "id". 
         */
        public static final String ID = (__ + ".id").intern();

        /**
         * Name of "contactId" property. 
         * type: long. 
         * column: "contactid". 
         */
        public static final String CONTACT_ID = (__ + ".contactId").intern();

        /**
         * Name of "emailAddress" property. 
         * type: String. 
         * column: "emailaddress". 
         */
        public static final String EMAIL_ADDRESS = (__ + ".emailAddress").intern();

        /**
         * Immutable property name list
         */
        public static final List<String> _PNL = Collections.unmodifiableList(Arrays.asList(ID, CONTACT_ID, EMAIL_ADDRESS));

        /**
         * Immutable column name list
         */
        public static final List<String> _CNL = Collections.unmodifiableList(Arrays.asList("email.id".intern(), "email.contactid".intern(), "email.emailaddress".intern()));
    }

    public static final String ADDRESS = "address".intern();

    public static final String AUTHOR = "author".intern();

    public static final String AUTHOR_ID = "authorId".intern();

    public static final String BIG_DECIMAL_ARRAY_LIST_TYPE = "bigDecimalArrayListType".intern();

    public static final String BIG_DECIMAL_HASH_MAP_TYPE = "bigDecimalHashMapType".intern();

    public static final String BIG_DECIMAL_HASH_SET_TYPE = "bigDecimalHashSetType".intern();

    public static final String BIG_DECIMAL_TYPE = "bigDecimalType".intern();

    public static final String BIG_INTEGER_TYPE = "bigIntegerType".intern();

    public static final String BINARY_STREAM_TYPE = "binaryStreamType".intern();

    public static final String BIRTH_DAY = "birthDay".intern();

    public static final String BLOB_TYPE = "blobType".intern();

    public static final String BOOK = "book".intern();

    public static final String BOOK_ID = "bookId".intern();

    public static final String BOOLEAN_LINKED_HASH_MAP_TYPE = "booleanLinkedHashMapType".intern();

    public static final String BOOLEAN_LINKED_HASH_SET_TYPE = "booleanLinkedHashSetType".intern();

    public static final String BOOLEAN_LINKED_LIST_TYPE = "booleanLinkedListType".intern();

    public static final String BOOLEAN_TYPE = "booleanType".intern();

    public static final String BYTE_ARRAY_TYPE = "byteArrayType".intern();

    public static final String BYTE_TYPE = "byteType".intern();

    public static final String CHARACTER_STREAM_TYPE = "characterStreamType".intern();

    public static final String CHAR_TYPE = "charType".intern();

    public static final String CLOB_TYPE = "clobType".intern();

    public static final String CONTACT = "contact".intern();

    public static final String CONTACT_ID = "contactId".intern();

    public static final String DATE_ARRAY_LIST_TYPE = "dateArrayListType".intern();

    public static final String DATE_HASH_MAP_TYPE = "dateHashMapType".intern();

    public static final String DATE_HASH_SET_TYPE = "dateHashSetType".intern();

    public static final String DATE_TYPE = "dateType".intern();

    public static final String DOUBLE_LIST_TYPE = "doubleListType".intern();

    public static final String DOUBLE_TYPE = "doubleType".intern();

    public static final String EMAIL = "email".intern();

    public static final String EMAIL_ADDRESS = "emailAddress".intern();

    public static final String EMAIL_LIST = "emailList".intern();

    public static final String ENUM_TYPE = "enumType".intern();

    public static final String FIRST_NAME = "firstName".intern();

    public static final String FLOAT_HASH_MAP_TYPE = "floatHashMapType".intern();

    public static final String FLOAT_TYPE = "floatType".intern();

    public static final String HOST_ID = "hostId".intern();

    public static final String ID = "id".intern();

    public static final String INT_TYPE = "intType".intern();

    public static final String JSON_TYPE = "jsonType".intern();

    public static final String LANGUAGE = "language".intern();

    public static final String LAST_NAME = "lastName".intern();

    public static final String LONG_DATE_TYPE = "longDateType".intern();

    public static final String LONG_TIMESTAMP_TYPE = "longTimestampType".intern();

    public static final String LONG_TIME_TYPE = "longTimeType".intern();

    public static final String LONG_TYPE = "longType".intern();

    public static final String MOBILE = "mobile".intern();

    public static final String NAME = "name".intern();

    public static final String SHORT_TYPE = "shortType".intern();

    public static final String STRING_ARRAY_LIST_TYPE = "stringArrayListType".intern();

    public static final String STRING_CONCURRENT_HASH_MAP_TYPE = "stringConcurrentHashMapType".intern();

    public static final String STRING_HASH_MAP_TYPE = "stringHashMapType".intern();

    public static final String STRING_HASH_SET_TYPE = "stringHashSetType".intern();

    public static final String STRING_TYPE = "stringType".intern();

    public static final String STRING_VECTOR_TYPE = "stringVectorType".intern();

    public static final String TELEPHONE = "telephone".intern();

    public static final String TIMESTAMP_ARRAY_LIST_TYPE = "timestampArrayListType".intern();

    public static final String TIMESTAMP_HASH_MAP_TYPE = "timestampHashMapType".intern();

    public static final String TIMESTAMP_HASH_SET_TYPE = "timestampHashSetType".intern();

    public static final String TIMESTAMP_TYPE = "timestampType".intern();

    public static final String TIME_TYPE = "timeType".intern();

    public static final String XML_TYPE = "xmlType".intern();
}
