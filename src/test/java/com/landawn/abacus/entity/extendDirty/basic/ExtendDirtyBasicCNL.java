/*
 * Generated by Abacus.
 */
package com.landawn.abacus.entity.extendDirty.basic;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

/**
 * Generated by Abacus.
 * @version ${version}
 */
public interface ExtendDirtyBasicCNL {
    public static final String _DN = "extendDirtyBasic".intern();

    public static interface AccountCNL {
        /**
         * Name of "account" table. 
         */
        public static final String __ = "account".intern();

        /**
         * Name of "id" column. 
         * Java type: long. 
         */
        public static final String ID = (__ + ".id").intern();

        /**
         * Name of "gui" column. 
         * Java type: String. 
         */
        public static final String GUI = (__ + ".gui").intern();

        /**
         * Name of "email_address" column. 
         * Java type: String. 
         */
        public static final String EMAIL_ADDRESS = (__ + ".email_address").intern();

        /**
         * Name of "first_name" column. 
         * Java type: String. 
         */
        public static final String FIRST_NAME = (__ + ".first_name").intern();

        /**
         * Name of "middle_name" column. 
         * Java type: String. 
         */
        public static final String MIDDLE_NAME = (__ + ".middle_name").intern();

        /**
         * Name of "last_name" column. 
         * Java type: String. 
         */
        public static final String LAST_NAME = (__ + ".last_name").intern();

        /**
         * Name of "birth_date" column. 
         * Java type: Timestamp. 
         */
        public static final String BIRTH_DATE = (__ + ".birth_date").intern();

        /**
         * Name of "status" column. 
         * Java type: int. 
         */
        public static final String STATUS = (__ + ".status").intern();

        /**
         * Name of "last_update_time" column. 
         * Java type: Timestamp. 
         */
        public static final String LAST_UPDATE_TIME = (__ + ".last_update_time").intern();

        /**
         * Name of "create_time" column. 
         * Java type: Timestamp. 
         */
        public static final String CREATE_TIME = (__ + ".create_time").intern();

        /**
         * Immutable column name list
         */
        public static final List<String> _CNL = Collections.unmodifiableList(Arrays.asList(ID, GUI, EMAIL_ADDRESS, FIRST_NAME, MIDDLE_NAME, LAST_NAME, BIRTH_DATE, STATUS, LAST_UPDATE_TIME, CREATE_TIME));

        /**
         * Immutable property name list
         */
        public static final List<String> _PNL = Collections.unmodifiableList(Arrays.asList("Account.id".intern(), "Account.gui".intern(), "Account.emailAddress".intern(), "Account.firstName".intern(), "Account.middleName".intern(), "Account.lastName".intern(), "Account.birthDate".intern(), "Account.status".intern(), "Account.lastUpdateTime".intern(), "Account.createTime".intern()));
    }

    public static interface AccountContactCNL {
        /**
         * Name of "account_contact" table. 
         */
        public static final String __ = "account_contact".intern();

        /**
         * Name of "id" column. 
         * Java type: long. 
         */
        public static final String ID = (__ + ".id").intern();

        /**
         * Name of "account_id" column. 
         * Java type: long. 
         */
        public static final String ACCOUNT_ID = (__ + ".account_id").intern();

        /**
         * Name of "mobile" column. 
         * Java type: String. 
         */
        public static final String MOBILE = (__ + ".mobile").intern();

        /**
         * Name of "telephone" column. 
         * Java type: String. 
         */
        public static final String TELEPHONE = (__ + ".telephone").intern();

        /**
         * Name of "email" column. 
         * Java type: String. 
         */
        public static final String EMAIL = (__ + ".email").intern();

        /**
         * Name of "address" column. 
         * Java type: String. 
         */
        public static final String ADDRESS = (__ + ".address").intern();

        /**
         * Name of "address_2" column. 
         * Java type: String. 
         */
        public static final String ADDRESS_2 = (__ + ".address_2").intern();

        /**
         * Name of "city" column. 
         * Java type: String. 
         */
        public static final String CITY = (__ + ".city").intern();

        /**
         * Name of "state" column. 
         * Java type: String. 
         */
        public static final String STATE = (__ + ".state").intern();

        /**
         * Name of "country" column. 
         * Java type: String. 
         */
        public static final String COUNTRY = (__ + ".country").intern();

        /**
         * Name of "zip_code" column. 
         * Java type: String. 
         */
        public static final String ZIP_CODE = (__ + ".zip_code").intern();

        /**
         * Name of "category" column. 
         * Java type: String. 
         */
        public static final String CATEGORY = (__ + ".category").intern();

        /**
         * Name of "description" column. 
         * Java type: String. 
         */
        public static final String DESCRIPTION = (__ + ".description").intern();

        /**
         * Name of "status" column. 
         * Java type: int. 
         */
        public static final String STATUS = (__ + ".status").intern();

        /**
         * Name of "last_update_time" column. 
         * Java type: Timestamp. 
         */
        public static final String LAST_UPDATE_TIME = (__ + ".last_update_time").intern();

        /**
         * Name of "create_time" column. 
         * Java type: Timestamp. 
         */
        public static final String CREATE_TIME = (__ + ".create_time").intern();

        /**
         * Immutable column name list
         */
        public static final List<String> _CNL = Collections.unmodifiableList(Arrays.asList(ID, ACCOUNT_ID, MOBILE, TELEPHONE, EMAIL, ADDRESS, ADDRESS_2, CITY, STATE, COUNTRY, ZIP_CODE, CATEGORY, DESCRIPTION, STATUS, LAST_UPDATE_TIME, CREATE_TIME));

        /**
         * Immutable property name list
         */
        public static final List<String> _PNL = Collections.unmodifiableList(Arrays.asList("AccountContact.id".intern(), "AccountContact.accountId".intern(), "AccountContact.mobile".intern(), "AccountContact.telephone".intern(), "AccountContact.email".intern(), "AccountContact.address".intern(), "AccountContact.address2".intern(), "AccountContact.city".intern(), "AccountContact.state".intern(), "AccountContact.country".intern(), "AccountContact.zipCode".intern(), "AccountContact.category".intern(), "AccountContact.description".intern(), "AccountContact.status".intern(), "AccountContact.lastUpdateTime".intern(), "AccountContact.createTime".intern()));
    }

    public static interface AccountDeviceCNL {
        /**
         * Name of "account_device" table. 
         */
        public static final String __ = "account_device".intern();

        /**
         * Name of "id" column. 
         * Java type: long. 
         */
        public static final String ID = (__ + ".id").intern();

        /**
         * Name of "account_id" column. 
         * Java type: long. 
         */
        public static final String ACCOUNT_ID = (__ + ".account_id").intern();

        /**
         * Name of "name" column. 
         * Java type: String. 
         */
        public static final String NAME = (__ + ".name").intern();

        /**
         * Name of "udid" column. 
         * Java type: String. 
         */
        public static final String UDID = (__ + ".udid").intern();

        /**
         * Name of "platform" column. 
         * Java type: String. 
         */
        public static final String PLATFORM = (__ + ".platform").intern();

        /**
         * Name of "model" column. 
         * Java type: String. 
         */
        public static final String MODEL = (__ + ".model").intern();

        /**
         * Name of "manufacturer" column. 
         * Java type: String. 
         */
        public static final String MANUFACTURER = (__ + ".manufacturer").intern();

        /**
         * Name of "produce_time" column. 
         * Java type: Timestamp. 
         */
        public static final String PRODUCE_TIME = (__ + ".produce_time").intern();

        /**
         * Name of "category" column. 
         * Java type: String. 
         */
        public static final String CATEGORY = (__ + ".category").intern();

        /**
         * Name of "description" column. 
         * Java type: String. 
         */
        public static final String DESCRIPTION = (__ + ".description").intern();

        /**
         * Name of "status" column. 
         * Java type: int. 
         */
        public static final String STATUS = (__ + ".status").intern();

        /**
         * Name of "last_update_time" column. 
         * Java type: Timestamp. 
         */
        public static final String LAST_UPDATE_TIME = (__ + ".last_update_time").intern();

        /**
         * Name of "create_time" column. 
         * Java type: Timestamp. 
         */
        public static final String CREATE_TIME = (__ + ".create_time").intern();

        /**
         * Immutable column name list
         */
        public static final List<String> _CNL = Collections.unmodifiableList(Arrays.asList(ID, ACCOUNT_ID, NAME, UDID, PLATFORM, MODEL, MANUFACTURER, PRODUCE_TIME, CATEGORY, DESCRIPTION, STATUS, LAST_UPDATE_TIME, CREATE_TIME));

        /**
         * Immutable property name list
         */
        public static final List<String> _PNL = Collections.unmodifiableList(Arrays.asList("AccountDevice.id".intern(), "AccountDevice.accountId".intern(), "AccountDevice.name".intern(), "AccountDevice.UDID".intern(), "AccountDevice.platform".intern(), "AccountDevice.model".intern(), "AccountDevice.manufacturer".intern(), "AccountDevice.produceTime".intern(), "AccountDevice.category".intern(), "AccountDevice.description".intern(), "AccountDevice.status".intern(), "AccountDevice.lastUpdateTime".intern(), "AccountDevice.createTime".intern()));
    }

    public static interface AclGroupCNL {
        /**
         * Name of "acl_group" table. 
         */
        public static final String __ = "acl_group".intern();

        /**
         * Name of "id" column. 
         * Java type: long. 
         */
        public static final String ID = (__ + ".id").intern();

        /**
         * Name of "gui" column. 
         * Java type: String. 
         */
        public static final String GUI = (__ + ".gui").intern();

        /**
         * Name of "name" column. 
         * Java type: String. 
         */
        public static final String NAME = (__ + ".name").intern();

        /**
         * Name of "description" column. 
         * Java type: String. 
         */
        public static final String DESCRIPTION = (__ + ".description").intern();

        /**
         * Name of "status" column. 
         * Java type: int. 
         */
        public static final String STATUS = (__ + ".status").intern();

        /**
         * Name of "last_update_time" column. 
         * Java type: Timestamp. 
         */
        public static final String LAST_UPDATE_TIME = (__ + ".last_update_time").intern();

        /**
         * Name of "create_time" column. 
         * Java type: Timestamp. 
         */
        public static final String CREATE_TIME = (__ + ".create_time").intern();

        /**
         * Immutable column name list
         */
        public static final List<String> _CNL = Collections.unmodifiableList(Arrays.asList(ID, GUI, NAME, DESCRIPTION, STATUS, LAST_UPDATE_TIME, CREATE_TIME));

        /**
         * Immutable property name list
         */
        public static final List<String> _PNL = Collections.unmodifiableList(Arrays.asList("AclGroup.id".intern(), "AclGroup.gui".intern(), "AclGroup.name".intern(), "AclGroup.description".intern(), "AclGroup.status".intern(), "AclGroup.lastUpdateTime".intern(), "AclGroup.createTime".intern()));
    }

    public static interface AclTargetCNL {
        /**
         * Name of "acl_target" table. 
         */
        public static final String __ = "acl_target".intern();

        /**
         * Name of "id" column. 
         * Java type: long. 
         */
        public static final String ID = (__ + ".id").intern();

        /**
         * Name of "gui" column. 
         * Java type: String. 
         */
        public static final String GUI = (__ + ".gui").intern();

        /**
         * Name of "name" column. 
         * Java type: String. 
         */
        public static final String NAME = (__ + ".name").intern();

        /**
         * Name of "category" column. 
         * Java type: String. 
         */
        public static final String CATEGORY = (__ + ".category").intern();

        /**
         * Name of "sub_category" column. 
         * Java type: String. 
         */
        public static final String SUB_CATEGORY = (__ + ".sub_category").intern();

        /**
         * Name of "type" column. 
         * Java type: String. 
         */
        public static final String TYPE = (__ + ".type").intern();

        /**
         * Name of "sub_type" column. 
         * Java type: String. 
         */
        public static final String SUB_TYPE = (__ + ".sub_type").intern();

        /**
         * Name of "description" column. 
         * Java type: String. 
         */
        public static final String DESCRIPTION = (__ + ".description").intern();

        /**
         * Name of "status" column. 
         * Java type: int. 
         */
        public static final String STATUS = (__ + ".status").intern();

        /**
         * Name of "last_update_time" column. 
         * Java type: Timestamp. 
         */
        public static final String LAST_UPDATE_TIME = (__ + ".last_update_time").intern();

        /**
         * Name of "create_time" column. 
         * Java type: Timestamp. 
         */
        public static final String CREATE_TIME = (__ + ".create_time").intern();

        /**
         * Immutable column name list
         */
        public static final List<String> _CNL = Collections.unmodifiableList(Arrays.asList(ID, GUI, NAME, CATEGORY, SUB_CATEGORY, TYPE, SUB_TYPE, DESCRIPTION, STATUS, LAST_UPDATE_TIME, CREATE_TIME));

        /**
         * Immutable property name list
         */
        public static final List<String> _PNL = Collections.unmodifiableList(Arrays.asList("AclTarget.id".intern(), "AclTarget.gui".intern(), "AclTarget.name".intern(), "AclTarget.category".intern(), "AclTarget.subCategory".intern(), "AclTarget.type".intern(), "AclTarget.subType".intern(), "AclTarget.description".intern(), "AclTarget.status".intern(), "AclTarget.lastUpdateTime".intern(), "AclTarget.createTime".intern()));
    }

    public static interface AclUgTargetRelationshipCNL {
        /**
         * Name of "acl_ug_target_relationship" table. 
         */
        public static final String __ = "acl_ug_target_relationship".intern();

        /**
         * Name of "id" column. 
         * Java type: long. 
         */
        public static final String ID = (__ + ".id").intern();

        /**
         * Name of "ug_gui" column. 
         * Java type: String. 
         */
        public static final String UG_GUI = (__ + ".ug_gui").intern();

        /**
         * Name of "target_gui" column. 
         * Java type: String. 
         */
        public static final String TARGET_GUI = (__ + ".target_gui").intern();

        /**
         * Name of "privilege" column. 
         * Java type: long. 
         */
        public static final String PRIVILEGE = (__ + ".privilege").intern();

        /**
         * Name of "description" column. 
         * Java type: String. 
         */
        public static final String DESCRIPTION = (__ + ".description").intern();

        /**
         * Name of "status" column. 
         * Java type: int. 
         */
        public static final String STATUS = (__ + ".status").intern();

        /**
         * Name of "last_update_time" column. 
         * Java type: Timestamp. 
         */
        public static final String LAST_UPDATE_TIME = (__ + ".last_update_time").intern();

        /**
         * Name of "create_time" column. 
         * Java type: Timestamp. 
         */
        public static final String CREATE_TIME = (__ + ".create_time").intern();

        /**
         * Immutable column name list
         */
        public static final List<String> _CNL = Collections.unmodifiableList(Arrays.asList(ID, UG_GUI, TARGET_GUI, PRIVILEGE, DESCRIPTION, STATUS, LAST_UPDATE_TIME, CREATE_TIME));

        /**
         * Immutable property name list
         */
        public static final List<String> _PNL = Collections.unmodifiableList(Arrays.asList("AclUgTargetRelationship.id".intern(), "AclUgTargetRelationship.ugGui".intern(), "AclUgTargetRelationship.targetGui".intern(), "AclUgTargetRelationship.privilege".intern(), "AclUgTargetRelationship.description".intern(), "AclUgTargetRelationship.status".intern(), "AclUgTargetRelationship.lastUpdateTime".intern(), "AclUgTargetRelationship.createTime".intern()));
    }

    public static interface AclUserCNL {
        /**
         * Name of "acl_user" table. 
         */
        public static final String __ = "acl_user".intern();

        /**
         * Name of "id" column. 
         * Java type: long. 
         */
        public static final String ID = (__ + ".id").intern();

        /**
         * Name of "gui" column. 
         * Java type: String. 
         */
        public static final String GUI = (__ + ".gui").intern();

        /**
         * Name of "name" column. 
         * Java type: String. 
         */
        public static final String NAME = (__ + ".name").intern();

        /**
         * Name of "description" column. 
         * Java type: String. 
         */
        public static final String DESCRIPTION = (__ + ".description").intern();

        /**
         * Name of "status" column. 
         * Java type: int. 
         */
        public static final String STATUS = (__ + ".status").intern();

        /**
         * Name of "last_update_time" column. 
         * Java type: Timestamp. 
         */
        public static final String LAST_UPDATE_TIME = (__ + ".last_update_time").intern();

        /**
         * Name of "create_time" column. 
         * Java type: Timestamp. 
         */
        public static final String CREATE_TIME = (__ + ".create_time").intern();

        /**
         * Immutable column name list
         */
        public static final List<String> _CNL = Collections.unmodifiableList(Arrays.asList(ID, GUI, NAME, DESCRIPTION, STATUS, LAST_UPDATE_TIME, CREATE_TIME));

        /**
         * Immutable property name list
         */
        public static final List<String> _PNL = Collections.unmodifiableList(Arrays.asList("AclUser.id".intern(), "AclUser.gui".intern(), "AclUser.name".intern(), "AclUser.description".intern(), "AclUser.status".intern(), "AclUser.lastUpdateTime".intern(), "AclUser.createTime".intern()));
    }

    public static interface AclUserGroupRelationshipCNL {
        /**
         * Name of "acl_user_group_relationship" table. 
         */
        public static final String __ = "acl_user_group_relationship".intern();

        /**
         * Name of "id" column. 
         * Java type: long. 
         */
        public static final String ID = (__ + ".id").intern();

        /**
         * Name of "user_gui" column. 
         * Java type: String. 
         */
        public static final String USER_GUI = (__ + ".user_gui").intern();

        /**
         * Name of "group_gui" column. 
         * Java type: String. 
         */
        public static final String GROUP_GUI = (__ + ".group_gui").intern();

        /**
         * Name of "description" column. 
         * Java type: String. 
         */
        public static final String DESCRIPTION = (__ + ".description").intern();

        /**
         * Name of "status" column. 
         * Java type: int. 
         */
        public static final String STATUS = (__ + ".status").intern();

        /**
         * Name of "last_update_time" column. 
         * Java type: Timestamp. 
         */
        public static final String LAST_UPDATE_TIME = (__ + ".last_update_time").intern();

        /**
         * Name of "create_time" column. 
         * Java type: Timestamp. 
         */
        public static final String CREATE_TIME = (__ + ".create_time").intern();

        /**
         * Immutable column name list
         */
        public static final List<String> _CNL = Collections.unmodifiableList(Arrays.asList(ID, USER_GUI, GROUP_GUI, DESCRIPTION, STATUS, LAST_UPDATE_TIME, CREATE_TIME));

        /**
         * Immutable property name list
         */
        public static final List<String> _PNL = Collections.unmodifiableList(Arrays.asList("AclUserGroupRelationship.id".intern(), "AclUserGroupRelationship.userGUI".intern(), "AclUserGroupRelationship.groupGUI".intern(), "AclUserGroupRelationship.description".intern(), "AclUserGroupRelationship.status".intern(), "AclUserGroupRelationship.lastUpdateTime".intern(), "AclUserGroupRelationship.createTime".intern()));
    }

    public static interface DataTypeCNL {
        /**
         * Name of "data_type" table. 
         */
        public static final String __ = "data_type".intern();

        /**
         * Name of "bytetype" column. 
         * Java type: byte. 
         */
        public static final String BYTETYPE = (__ + ".bytetype").intern();

        /**
         * Name of "chartype" column. 
         * Java type: char. 
         */
        public static final String CHARTYPE = (__ + ".chartype").intern();

        /**
         * Name of "booleantype" column. 
         * Java type: boolean. 
         */
        public static final String BOOLEANTYPE = (__ + ".booleantype").intern();

        /**
         * Name of "shorttype" column. 
         * Java type: short. 
         */
        public static final String SHORTTYPE = (__ + ".shorttype").intern();

        /**
         * Name of "inttype" column. 
         * Java type: int. 
         */
        public static final String INTTYPE = (__ + ".inttype").intern();

        /**
         * Name of "longtype" column. 
         * Java type: long. 
         */
        public static final String LONGTYPE = (__ + ".longtype").intern();

        /**
         * Name of "floattype" column. 
         * Java type: float. 
         */
        public static final String FLOATTYPE = (__ + ".floattype").intern();

        /**
         * Name of "doubletype" column. 
         * Java type: double. 
         */
        public static final String DOUBLETYPE = (__ + ".doubletype").intern();

        /**
         * Name of "bigIntegerType" column. 
         * Java type: BigInteger. 
         */
        public static final String BIG_INTEGER_TYPE = (__ + ".bigIntegerType").intern();

        /**
         * Name of "bigdecimaltype" column. 
         * Java type: BigDecimal. 
         */
        public static final String BIGDECIMALTYPE = (__ + ".bigdecimaltype").intern();

        /**
         * Name of "stringtype" column. 
         * Java type: String. 
         */
        public static final String STRINGTYPE = (__ + ".stringtype").intern();

        /**
         * Name of "bytearraytype" column. 
         * Java type: byte[]. 
         */
        public static final String BYTEARRAYTYPE = (__ + ".bytearraytype").intern();

        /**
         * Name of "characterstreamtype" column. 
         * Java type: CharacterStream. 
         */
        public static final String CHARACTERSTREAMTYPE = (__ + ".characterstreamtype").intern();

        /**
         * Name of "binarystreamtype" column. 
         * Java type: BinaryStream. 
         */
        public static final String BINARYSTREAMTYPE = (__ + ".binarystreamtype").intern();

        /**
         * Name of "clobtype" column. 
         * Java type: Clob. 
         */
        public static final String CLOBTYPE = (__ + ".clobtype").intern();

        /**
         * Name of "blobtype" column. 
         * Java type: Blob. 
         */
        public static final String BLOBTYPE = (__ + ".blobtype").intern();

        /**
         * Name of "datetype" column. 
         * Java type: Date. 
         */
        public static final String DATETYPE = (__ + ".datetype").intern();

        /**
         * Name of "timetype" column. 
         * Java type: Time. 
         */
        public static final String TIMETYPE = (__ + ".timetype").intern();

        /**
         * Name of "timestamptype" column. 
         * Java type: Timestamp. 
         */
        public static final String TIMESTAMPTYPE = (__ + ".timestamptype").intern();

        /**
         * Name of "longDateType" column. 
         * Java type: long. 
         */
        public static final String LONG_DATE_TYPE = (__ + ".longDateType").intern();

        /**
         * Name of "longTimeType" column. 
         * Java type: long. 
         */
        public static final String LONG_TIME_TYPE = (__ + ".longTimeType").intern();

        /**
         * Name of "longTimestampType" column. 
         * Java type: long. 
         */
        public static final String LONG_TIMESTAMP_TYPE = (__ + ".longTimestampType").intern();

        /**
         * Name of "enumType" column. 
         * Java type: com.landawn.abacus.types.WeekDay. 
         */
        public static final String ENUM_TYPE = (__ + ".enumType").intern();

        /**
         * Name of "stringarraylisttype" column. 
         * Java type: ArrayList<String>. 
         */
        public static final String STRINGARRAYLISTTYPE = (__ + ".stringarraylisttype").intern();

        /**
         * Name of "booleanlinkedlisttype" column. 
         * Java type: LinkedList<Boolean>. 
         */
        public static final String BOOLEANLINKEDLISTTYPE = (__ + ".booleanlinkedlisttype").intern();

        /**
         * Name of "doublearraylisttype" column. 
         * Java type: List<Double>. 
         */
        public static final String DOUBLEARRAYLISTTYPE = (__ + ".doublearraylisttype").intern();

        /**
         * Name of "datearraylisttype" column. 
         * Java type: ArrayList<Date>. 
         */
        public static final String DATEARRAYLISTTYPE = (__ + ".datearraylisttype").intern();

        /**
         * Name of "timestamparraylisttype" column. 
         * Java type: ArrayList<Timestamp>. 
         */
        public static final String TIMESTAMPARRAYLISTTYPE = (__ + ".timestamparraylisttype").intern();

        /**
         * Name of "bigdecimalarraylisttype" column. 
         * Java type: ArrayList<BigDecimal>. 
         */
        public static final String BIGDECIMALARRAYLISTTYPE = (__ + ".bigdecimalarraylisttype").intern();

        /**
         * Name of "stringhashsettype" column. 
         * Java type: HashSet<String>. 
         */
        public static final String STRINGHASHSETTYPE = (__ + ".stringhashsettype").intern();

        /**
         * Name of "booleanlinkedhashsettype" column. 
         * Java type: LinkedHashSet<Boolean>. 
         */
        public static final String BOOLEANLINKEDHASHSETTYPE = (__ + ".booleanlinkedhashsettype").intern();

        /**
         * Name of "datehashsettype" column. 
         * Java type: HashSet<Date>. 
         */
        public static final String DATEHASHSETTYPE = (__ + ".datehashsettype").intern();

        /**
         * Name of "timestamphashsettype" column. 
         * Java type: HashSet<Timestamp>. 
         */
        public static final String TIMESTAMPHASHSETTYPE = (__ + ".timestamphashsettype").intern();

        /**
         * Name of "bigdecimalhashsettype" column. 
         * Java type: HashSet<BigDecimal>. 
         */
        public static final String BIGDECIMALHASHSETTYPE = (__ + ".bigdecimalhashsettype").intern();

        /**
         * Name of "stringhashmaptype" column. 
         * Java type: HashMap<String, String>. 
         */
        public static final String STRINGHASHMAPTYPE = (__ + ".stringhashmaptype").intern();

        /**
         * Name of "booleanlinkedhashmaptype" column. 
         * Java type: LinkedHashMap<String, Boolean>. 
         */
        public static final String BOOLEANLINKEDHASHMAPTYPE = (__ + ".booleanlinkedhashmaptype").intern();

        /**
         * Name of "floathashmaptype" column. 
         * Java type: HashMap<String, Float>. 
         */
        public static final String FLOATHASHMAPTYPE = (__ + ".floathashmaptype").intern();

        /**
         * Name of "datehashmaptype" column. 
         * Java type: HashMap<String, Date>. 
         */
        public static final String DATEHASHMAPTYPE = (__ + ".datehashmaptype").intern();

        /**
         * Name of "timestamphashmaptype" column. 
         * Java type: HashMap<Timestamp, Float>. 
         */
        public static final String TIMESTAMPHASHMAPTYPE = (__ + ".timestamphashmaptype").intern();

        /**
         * Name of "bigdecimalhashmaptype" column. 
         * Java type: HashMap<BigDecimal, String>. 
         */
        public static final String BIGDECIMALHASHMAPTYPE = (__ + ".bigdecimalhashmaptype").intern();

        /**
         * Name of "stringvectortype" column. 
         * Java type: Vector<String>. 
         */
        public static final String STRINGVECTORTYPE = (__ + ".stringvectortype").intern();

        /**
         * Name of "stringconcurrenthashmaptype" column. 
         * Java type: ConcurrentHashMap<BigDecimal, String>. 
         */
        public static final String STRINGCONCURRENTHASHMAPTYPE = (__ + ".stringconcurrenthashmaptype").intern();

        /**
         * Name of "jsonType" column. 
         * Java type: JSON<com.landawn.abacus.entity.extendDirty.lvc.Account>. 
         */
        public static final String JSON_TYPE = (__ + ".jsonType").intern();

        /**
         * Name of "xmlType" column. 
         * Java type: XML<com.landawn.abacus.entity.extendDirty.lvc.Account>. 
         */
        public static final String XML_TYPE = (__ + ".xmlType").intern();

        /**
         * Immutable column name list
         */
        public static final List<String> _CNL = Collections.unmodifiableList(Arrays.asList(BYTETYPE, CHARTYPE, BOOLEANTYPE, SHORTTYPE, INTTYPE, LONGTYPE, FLOATTYPE, DOUBLETYPE, BIG_INTEGER_TYPE, BIGDECIMALTYPE, STRINGTYPE, BYTEARRAYTYPE, CHARACTERSTREAMTYPE, BINARYSTREAMTYPE, CLOBTYPE, BLOBTYPE, DATETYPE, TIMETYPE, TIMESTAMPTYPE, LONG_DATE_TYPE, LONG_TIME_TYPE, LONG_TIMESTAMP_TYPE, ENUM_TYPE, STRINGARRAYLISTTYPE, BOOLEANLINKEDLISTTYPE, DOUBLEARRAYLISTTYPE, DATEARRAYLISTTYPE, TIMESTAMPARRAYLISTTYPE, BIGDECIMALARRAYLISTTYPE, STRINGHASHSETTYPE, BOOLEANLINKEDHASHSETTYPE, DATEHASHSETTYPE, TIMESTAMPHASHSETTYPE, BIGDECIMALHASHSETTYPE, STRINGHASHMAPTYPE, BOOLEANLINKEDHASHMAPTYPE, FLOATHASHMAPTYPE, DATEHASHMAPTYPE, TIMESTAMPHASHMAPTYPE, BIGDECIMALHASHMAPTYPE, STRINGVECTORTYPE, STRINGCONCURRENTHASHMAPTYPE, JSON_TYPE, XML_TYPE));

        /**
         * Immutable property name list
         */
        public static final List<String> _PNL = Collections.unmodifiableList(Arrays.asList("DataType.byteType".intern(), "DataType.charType".intern(), "DataType.booleanType".intern(), "DataType.shortType".intern(), "DataType.intType".intern(), "DataType.longType".intern(), "DataType.floatType".intern(), "DataType.doubleType".intern(), "DataType.bigIntegerType".intern(), "DataType.bigDecimalType".intern(), "DataType.stringType".intern(), "DataType.byteArrayType".intern(), "DataType.characterStreamType".intern(), "DataType.binaryStreamType".intern(), "DataType.clobType".intern(), "DataType.blobType".intern(), "DataType.dateType".intern(), "DataType.timeType".intern(), "DataType.timestampType".intern(), "DataType.longDateType".intern(), "DataType.longTimeType".intern(), "DataType.longTimestampType".intern(), "DataType.enumType".intern(), "DataType.stringArrayListType".intern(), "DataType.booleanLinkedListType".intern(), "DataType.doubleListType".intern(), "DataType.dateArrayListType".intern(), "DataType.timestampArrayListType".intern(), "DataType.bigDecimalArrayListType".intern(), "DataType.stringHashSetType".intern(), "DataType.booleanLinkedHashSetType".intern(), "DataType.dateHashSetType".intern(), "DataType.timestampHashSetType".intern(), "DataType.bigDecimalHashSetType".intern(), "DataType.stringHashMapType".intern(), "DataType.booleanLinkedHashMapType".intern(), "DataType.floatHashMapType".intern(), "DataType.dateHashMapType".intern(), "DataType.timestampHashMapType".intern(), "DataType.bigDecimalHashMapType".intern(), "DataType.stringVectorType".intern(), "DataType.stringConcurrentHashMapType".intern(), "DataType.jsonType".intern(), "DataType.xmlType".intern()));
    }

    public static interface LoginCNL {
        /**
         * Name of "login" table. 
         */
        public static final String __ = "login".intern();

        /**
         * Name of "id" column. 
         * Java type: long. 
         */
        public static final String ID = (__ + ".id").intern();

        /**
         * Name of "account_id" column. 
         * Java type: long. 
         */
        public static final String ACCOUNT_ID = (__ + ".account_id").intern();

        /**
         * Name of "login_id" column. 
         * Java type: String. 
         */
        public static final String LOGIN_ID = (__ + ".login_id").intern();

        /**
         * Name of "login_password" column. 
         * Java type: String. 
         */
        public static final String LOGIN_PASSWORD = (__ + ".login_password").intern();

        /**
         * Name of "status" column. 
         * Java type: int. 
         */
        public static final String STATUS = (__ + ".status").intern();

        /**
         * Name of "last_update_time" column. 
         * Java type: Timestamp. 
         */
        public static final String LAST_UPDATE_TIME = (__ + ".last_update_time").intern();

        /**
         * Name of "create_time" column. 
         * Java type: Timestamp. 
         */
        public static final String CREATE_TIME = (__ + ".create_time").intern();

        /**
         * Immutable column name list
         */
        public static final List<String> _CNL = Collections.unmodifiableList(Arrays.asList(ID, ACCOUNT_ID, LOGIN_ID, LOGIN_PASSWORD, STATUS, LAST_UPDATE_TIME, CREATE_TIME));

        /**
         * Immutable property name list
         */
        public static final List<String> _PNL = Collections.unmodifiableList(Arrays.asList("Login.id".intern(), "Login.accountId".intern(), "Login.loginId".intern(), "Login.loginPassword".intern(), "Login.status".intern(), "Login.lastUpdateTime".intern(), "Login.createTime".intern()));
    }

    public static final String ACCOUNT_ID = "account_id".intern();

    public static final String ADDRESS = "address".intern();

    public static final String ADDRESS_2 = "address_2".intern();

    public static final String BIGDECIMALARRAYLISTTYPE = "bigdecimalarraylisttype".intern();

    public static final String BIGDECIMALHASHMAPTYPE = "bigdecimalhashmaptype".intern();

    public static final String BIGDECIMALHASHSETTYPE = "bigdecimalhashsettype".intern();

    public static final String BIGDECIMALTYPE = "bigdecimaltype".intern();

    public static final String BIG_INTEGER_TYPE = "bigIntegerType".intern();

    public static final String BINARYSTREAMTYPE = "binarystreamtype".intern();

    public static final String BIRTH_DATE = "birth_date".intern();

    public static final String BLOBTYPE = "blobtype".intern();

    public static final String BOOLEANLINKEDHASHMAPTYPE = "booleanlinkedhashmaptype".intern();

    public static final String BOOLEANLINKEDHASHSETTYPE = "booleanlinkedhashsettype".intern();

    public static final String BOOLEANLINKEDLISTTYPE = "booleanlinkedlisttype".intern();

    public static final String BOOLEANTYPE = "booleantype".intern();

    public static final String BYTEARRAYTYPE = "bytearraytype".intern();

    public static final String BYTETYPE = "bytetype".intern();

    public static final String CATEGORY = "category".intern();

    public static final String CHARACTERSTREAMTYPE = "characterstreamtype".intern();

    public static final String CHARTYPE = "chartype".intern();

    public static final String CITY = "city".intern();

    public static final String CLOBTYPE = "clobtype".intern();

    public static final String COUNTRY = "country".intern();

    public static final String CREATE_TIME = "create_time".intern();

    public static final String DATEARRAYLISTTYPE = "datearraylisttype".intern();

    public static final String DATEHASHMAPTYPE = "datehashmaptype".intern();

    public static final String DATEHASHSETTYPE = "datehashsettype".intern();

    public static final String DATETYPE = "datetype".intern();

    public static final String DESCRIPTION = "description".intern();

    public static final String DOUBLEARRAYLISTTYPE = "doublearraylisttype".intern();

    public static final String DOUBLETYPE = "doubletype".intern();

    public static final String EMAIL = "email".intern();

    public static final String EMAIL_ADDRESS = "email_address".intern();

    public static final String ENUM_TYPE = "enumType".intern();

    public static final String FIRST_NAME = "first_name".intern();

    public static final String FLOATHASHMAPTYPE = "floathashmaptype".intern();

    public static final String FLOATTYPE = "floattype".intern();

    public static final String GROUP_GUI = "group_gui".intern();

    public static final String GUI = "gui".intern();

    public static final String ID = "id".intern();

    public static final String INTTYPE = "inttype".intern();

    public static final String JSON_TYPE = "jsonType".intern();

    public static final String LAST_NAME = "last_name".intern();

    public static final String LAST_UPDATE_TIME = "last_update_time".intern();

    public static final String LOGIN_ID = "login_id".intern();

    public static final String LOGIN_PASSWORD = "login_password".intern();

    public static final String LONG_DATE_TYPE = "longDateType".intern();

    public static final String LONG_TIMESTAMP_TYPE = "longTimestampType".intern();

    public static final String LONG_TIME_TYPE = "longTimeType".intern();

    public static final String LONGTYPE = "longtype".intern();

    public static final String MANUFACTURER = "manufacturer".intern();

    public static final String MIDDLE_NAME = "middle_name".intern();

    public static final String MOBILE = "mobile".intern();

    public static final String MODEL = "model".intern();

    public static final String NAME = "name".intern();

    public static final String PLATFORM = "platform".intern();

    public static final String PRIVILEGE = "privilege".intern();

    public static final String PRODUCE_TIME = "produce_time".intern();

    public static final String SHORTTYPE = "shorttype".intern();

    public static final String STATE = "state".intern();

    public static final String STATUS = "status".intern();

    public static final String STRINGARRAYLISTTYPE = "stringarraylisttype".intern();

    public static final String STRINGCONCURRENTHASHMAPTYPE = "stringconcurrenthashmaptype".intern();

    public static final String STRINGHASHMAPTYPE = "stringhashmaptype".intern();

    public static final String STRINGHASHSETTYPE = "stringhashsettype".intern();

    public static final String STRINGTYPE = "stringtype".intern();

    public static final String STRINGVECTORTYPE = "stringvectortype".intern();

    public static final String SUB_CATEGORY = "sub_category".intern();

    public static final String SUB_TYPE = "sub_type".intern();

    public static final String TARGET_GUI = "target_gui".intern();

    public static final String TELEPHONE = "telephone".intern();

    public static final String TIMESTAMPARRAYLISTTYPE = "timestamparraylisttype".intern();

    public static final String TIMESTAMPHASHMAPTYPE = "timestamphashmaptype".intern();

    public static final String TIMESTAMPHASHSETTYPE = "timestamphashsettype".intern();

    public static final String TIMESTAMPTYPE = "timestamptype".intern();

    public static final String TIMETYPE = "timetype".intern();

    public static final String TYPE = "type".intern();

    public static final String UDID = "udid".intern();

    public static final String UG_GUI = "ug_gui".intern();

    public static final String USER_GUI = "user_gui".intern();

    public static final String XML_TYPE = "xmlType".intern();

    public static final String ZIP_CODE = "zip_code".intern();
}
