package com.myPackage.y;

import com.myPackage.x.Account;
import java.util.List;
import java.util.Map;

/**
 * Generated by Abacus.
 * @version ${version}
 */
public class Account2 extends Account {

    private long firstName2;
    private List<String> list1;
    private List<Account2> list2;
    private Map<Account2, Account2> map1;
    private Map<String, Account2> map2;
    private Map<Account2, String> map3;

    public Account2() {
    }

    public Account2(String firstName, String lastName, java.sql.Date birthdate, java.util.LinkedHashMap<String, Integer> attrs, long firstName2, List<String> list1, List<Account2> list2, Map<Account2, Account2> map1, Map<String, Account2> map2, Map<Account2, String> map3) {
        this.setFirstName(firstName);
        this.setLastName(lastName);
        this.setBirthdate(birthdate);
        this.setAttrs(attrs);
        this.firstName2 = firstName2;
        this.list1 = list1;
        this.list2 = list2;
        this.map1 = map1;
        this.map2 = map2;
        this.map3 = map3;
    }

    public Account2 setFirstName(String firstName) {
        super.setFirstName(firstName);

        return this;
    }

    public Account2 setLastName(String lastName) {
        super.setLastName(lastName);

        return this;
    }

    public Account2 setBirthdate(java.sql.Date birthdate) {
        super.setBirthdate(birthdate);

        return this;
    }

    public Account2 setAttrs(java.util.LinkedHashMap<String, Integer> attrs) {
        super.setAttrs(attrs);

        return this;
    }

    public long getFirstName2() {
        return firstName2;
    }

    public Account2 setFirstName2(long firstName2) {
        this.firstName2 = firstName2;

        return this;
    }

    public List<String> getList1() {
        return list1;
    }

    public Account2 setList1(List<String> list1) {
        this.list1 = list1;

        return this;
    }

    public List<Account2> getList2() {
        return list2;
    }

    public Account2 setList2(List<Account2> list2) {
        this.list2 = list2;

        return this;
    }

    public Map<Account2, Account2> getMap1() {
        return map1;
    }

    public Account2 setMap1(Map<Account2, Account2> map1) {
        this.map1 = map1;

        return this;
    }

    public Map<String, Account2> getMap2() {
        return map2;
    }

    public Account2 setMap2(Map<String, Account2> map2) {
        this.map2 = map2;

        return this;
    }

    public Map<Account2, String> getMap3() {
        return map3;
    }

    public Account2 setMap3(Map<Account2, String> map3) {
        this.map3 = map3;

        return this;
    }

    public Account2 copy() {
        final Account2 copy = new Account2();

        copy.setFirstName(this.getFirstName());
        copy.setLastName(this.getLastName());
        copy.setBirthdate(this.getBirthdate());
        copy.setAttrs(this.getAttrs());
        copy.firstName2 = this.firstName2;
        copy.list1 = this.list1;
        copy.list2 = this.list2;
        copy.map1 = this.map1;
        copy.map2 = this.map2;
        copy.map3 = this.map3;

        return copy;
    }

    @Override
    public int hashCode() {
        int h = 17;
        h = 31 * h + _N.hashCode(getFirstName());
        h = 31 * h + _N.hashCode(getLastName());
        h = 31 * h + _N.hashCode(getBirthdate());
        h = 31 * h + _N.hashCode(getAttrs());
        h = 31 * h + _N.hashCode(firstName2);
        h = 31 * h + _N.hashCode(list1);
        h = 31 * h + _N.hashCode(list2);
        h = 31 * h + _N.hashCode(map1);
        h = 31 * h + _N.hashCode(map2);
        h = 31 * h + _N.hashCode(map3);

        return h;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (obj instanceof Account2) {
            final Account2 other = (Account2) obj;

            return _N.equals(getFirstName(), other.getFirstName())
                && _N.equals(getLastName(), other.getLastName())
                && _N.equals(getBirthdate(), other.getBirthdate())
                && _N.equals(getAttrs(), other.getAttrs())
                && _N.equals(firstName2, other.firstName2)
                && _N.equals(list1, other.list1)
                && _N.equals(list2, other.list2)
                && _N.equals(map1, other.map1)
                && _N.equals(map2, other.map2)
                && _N.equals(map3, other.map3);
        }

        return false;
    }

    @Override
    public String toString() {
        return "{firstName=" + _N.toString(getFirstName())
                 + ", lastName=" + _N.toString(getLastName())
                 + ", birthdate=" + _N.toString(getBirthdate())
                 + ", attrs=" + _N.toString(getAttrs())
                 + ", firstName2=" + _N.toString(firstName2)
                 + ", list1=" + _N.toString(list1)
                 + ", list2=" + _N.toString(list2)
                 + ", map1=" + _N.toString(map1)
                 + ", map2=" + _N.toString(map2)
                 + ", map3=" + _N.toString(map3)
                 + "}";
    }
}
